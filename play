#!/usr/bin/env python3

## a2s3 - action arena game, written in python + panda3d
## Copyright (c) 2021 moonburnt
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program. If not, see https://www.gnu.org/licenses/gpl-3.0.txt

#game launcher script

import logging
import Game
import argparse

log = logging.getLogger()
log.setLevel(logging.INFO)
handler = logging.StreamHandler()
handler.setFormatter(logging.Formatter(fmt='[%(asctime)s][%(name)s][%(levelname)s] %(message)s', datefmt='%H:%M:%S'))
log.addHandler(handler)

ap = argparse.ArgumentParser()
ap.add_argument("--debug", help="Add debug messages to output",
                action = "store_true")
ap.add_argument("--show-collisions", help="Toggle showcase of objects collisions",
                action = "store_true")
ap.add_argument("--music-vol",
                help = "Override default music volume. Should be "
                       "between 0 and 100, else using defaults",
                type = int, default = 100)
ap.add_argument("--sfx-vol",
                help = "Override default music volume. Should be "
                       "between 0 and 100, else using defaults",
                type = int, default = 100)
ap.add_argument("--show-fps", help="Enable fps meter", action = "store_true")
ap.add_argument("--window-x", help = "Override default window's X. If less than default "
                                  "- will be still set to default", type = int)
ap.add_argument("--window-y", help = "Override default window's Y. If less than default "
                                  "- will be still set to default", type = int)

args = ap.parse_args()

if args.debug:
    log.setLevel(logging.DEBUG)

if args.show_collisions:
    Game.shared.SHOW_COLLISIONS = True

if args.show_fps:
    Game.shared.FPS_METER = True

if (0 <= args.music_vol <= 100):
    Game.shared.MUSIC_VOLUME = args.music_vol / 100
    log.debug(f"Music volume has been set to {args.music_vol}%")

if (0 <= args.sfx_vol <= 100):
    Game.shared.SFX_VOLUME = args.sfx_vol / 100
    log.debug(f"Music volume has been set to {args.sfx_vol}%")

if args.window_x and (args.window_x > Game.shared.DEFAULT_WINDOW_SIZE[0]):
    win_y = Game.shared.WINDOW_SIZE[1]
    Game.shared.WINDOW_SIZE = (args.window_x, win_y)

if args.window_y and (args.window_y > Game.shared.DEFAULT_WINDOW_SIZE[1]):
    win_x = Game.shared.WINDOW_SIZE[0]
    Game.shared.WINDOW_SIZE = (win_x, args.window_y)

play = Game.game_window.GameWindow()
log.info("Running the game")
play.run()
